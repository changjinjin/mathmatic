设计模式学习笔记：责任链模式（Chain of Responsibility）
https://blog.csdn.net/sinat_27245917/article/details/107512421
一、责任链模式介绍
应用场景
二、代码实现示例
代码实现
测试结果

一、责任链模式介绍
责任链模式属于设计模式中的行为型模式。顾名思义，责任链模式就是为请求者创建一个接收者对象的链，对请求的发送者和接收者解耦。
在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依次类推。

应用场景
示例：web系统中的过滤器
    多个对象可以处理同一个请求，具体要哪个对象处理该请求由运行时自动确定。
    在不明确指定接收者的情况下，向多个接收者对象中的一个提交一个请求。
    需要动态指定一组对象处理请求。

二、代码实现示例
把记录日志的功能设计为责任链模式，每个日志记录的类都只记录一个级别的日志，不是自己记录的级别就传递给下一个记录类。
示例涉及的类如下：
    AbstractLoggerHandler： 抽象的日志处理器
    DebugLoggerHandler： DEBUG级别的日志处理器
    ErrorLoggerHandler： ERROR级别的日志处理器
    InfoLoggerHandler： INFO级别的日志处理器
    MyLoggerHandlerFactory： 将各个日志处理器组装成一条责任链
    Logger： 要处理的日志对象
    TestChain： 测试代码
测试结果
    [ERROR]	: 错误消息
    [INFO]	: 普通消息
    [DEBUG]	: 调试消息

